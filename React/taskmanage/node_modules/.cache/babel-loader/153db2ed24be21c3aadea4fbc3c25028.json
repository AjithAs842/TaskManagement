{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91953\\\\Desktop\\\\taskmanage\\\\src\\\\list.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: '',\n      showText: false,\n      task: [],\n      status: ''\n    };\n\n    this.fetchTask = () => {\n      axios.get(\"https://localhost:8081/taskcontroller/find\").then(results => {\n        console.log(results.data, \"result\");\n        this.setState({\n          task: results.data\n        });\n      });\n    };\n\n    this.CheckboxChange = item => {\n      axios.post(\"http://localhost:8081/taskcontroller/taskStatus/\" + item.id).then(res => {\n        this.fetchTask();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTask();\n  }\n\n  add() {\n    this.setState({\n      showText: !this.state.showText,\n      text: \"\"\n    });\n\n    if (this.state.text !== \"\") {\n      axios.post(\"https://localhost:8081/taskcontroller/add\", {\n        task: this.state.text\n      }).then(result => {\n        this.componentDidMount();\n\n        if (result.status === 200) {\n          alert('Saved Successfully');\n        } else {\n          alert('Save failed!!!');\n        }\n      });\n    } else {\n      alert(\"No Data\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"header\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Fab, {\n                className: \"add\",\n                color: \"secondary\",\n                \"aria-label\": \"add\",\n                onClick: () => this.setState({\n                  showText: !this.state.showText\n                }),\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"buttondtext\",\n                children: \"Add a task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), this.state.showText ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"to-do-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter task\",\n                  onChange: e => {\n                    this.setState({\n                      text: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => this.add(),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.task.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                style: {\n                  margin: '20px',\n                  boxSizing: \"10px\"\n                },\n                checked: item.status === 'complete' ? true : false,\n                onChange: () => {\n                  this.CheckboxChange(item);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: item.status === 'complete' ? {\n                  textDecoration: 'line-through'\n                } : {\n                  textDecoration: 'none'\n                },\n                className: \"listText\",\n                children: item.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginLeft: \"10%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/91953/Desktop/taskmanage/src/list.js"],"names":["React","Component","axios","Fab","AddIcon","List","state","text","showText","task","status","fetchTask","get","then","results","console","log","data","setState","CheckboxChange","item","post","id","res","componentDidMount","add","result","alert","render","e","target","value","map","margin","boxSizing","textDecoration","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass List extends Component {\n\n    state = {\n\n        text: '',\n        showText: false,\n        task: [],\n        status: '',\n    }\n\n\n    componentDidMount() {\n        this.fetchTask();\n    }\n\n\n    add() {\n        \n         this.setState({\n              showText: !this.state.showText,\n              text:\"\"\n                 }) \n        \n        if (this.state.text !== \"\") {\n            axios.post(\"https://localhost:8081/taskcontroller/add\", {\n                task: this.state.text,\n\n            }).then((result) => {\n                this.componentDidMount();\n\n\n                if (result.status === 200) {\n                    alert('Saved Successfully')\n                }\n                else {\n                    alert('Save failed!!!')\n                }\n            })\n        }\n\n        else {\n            alert(\"No Data\")\n        }\n\n    }\n\n    fetchTask = () => {\n        axios.get(\"https://localhost:8081/taskcontroller/find\")\n            .then((results) => {\n\n                console.log(results.data, \"result\")\n                this.setState({\n                    task: results.data,\n                })\n            })\n\n\n    }\n\n\n    CheckboxChange = (item) => {\n        axios.post(\"http://localhost:8081/taskcontroller/taskStatus/\" + item.id)\n            .then((res) => {\n                this.fetchTask();\n\n            })\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <div>\n\n                    <div >\n                        <header>\n                            <div >\n                                <Fab className=\"add\" color=\"secondary\" aria-label=\"add\"\n                                    onClick={() => this.setState({ showText: !this.state.showText })}>\n                                    <AddIcon />\n\n                                </Fab>\n                                <h3 className=\"buttondtext\">Add a task </h3>\n                            </div>\n                            {\n                                this.state.showText ?\n                                    <div>\n\n                                        <div className=\"to-do-form\" >\n                                            <input type=\"text\" placeholder=\"Enter task\"\n                                                onChange={(e) => { this.setState({ text: e.target.value, }) }}></input>\n                                            <button onClick={(e) => this.add()}\n                                                 >Add</button>\n                                        </div>\n\n                                    </div>\n                                    : null\n                            }\n\n\n\n                        </header>\n                    </div>\n\n                </div>\n\n                <div>\n                    {\n                        this.state.task.map((item) => {\n                            return (\n                                <div>\n                                    <div>\n                                        <input type=\"checkbox\"\n                                            style={{ margin: '20px', boxSizing: \"10px\" }}\n                                            checked={item.status === 'complete' ? true : false}\n                                            onChange={() => { this.CheckboxChange(item) }}\n                                        />\n\n                                        <span style={(item.status === 'complete') ? { textDecoration: 'line-through' } :\n                                         { textDecoration: 'none' }} className=\"listText\">\n                                                   {item.task} \n                                         </span>\n                                        <hr style={{ marginLeft: \"10%\" }} />\n\n                                    </div>\n\n\n                                </div>\n                            )\n                        })\n\n\n                    }\n                </div >\n            </div>\n\n        )\n    }\n}\n\n\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}